service: droid

provider:
  name: aws
  runtime: nodejs4.3
  environment:
    DROID_TABLE: "${self:service}-${opt:stage, self:provider.stage}-droids"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DROID_TABLE}"
    - Effect: Allow
      Action:
        - iot:*
      Resource: "arn:aws:iot:${opt:region, self:provider.region}:*:*"

package:
  include:
    - dao/droid-dao.js

functions:
  create:
    handler: admin/create.create
    events:
      - http:
          path: droids
          method: post
          cors: true
  delete:
    handler: admin/delete.delete
    events:
      - http:
          path: droids/{id}
          method: delete
          cors: true
  get:
    handler: admin/get.get
    events:
      - http:
          path: droids/{id}
          method: get
          cors: true
  list:
    handler: admin/list.list
    events:
      - http:
          path: droids
          method: get
          cors: true
  update:
    handler: admin/update.update
    events:
      - http:
          path: droids/{id}
          method: put
          cors: true

resources:
  Resources:
    DroidsDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "${self:provider.environment.DROID_TABLE}"
